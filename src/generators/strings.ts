import { StringInputGenerator, ValueWithDescription } from "../types/InputGenerator";
import { LargeSize } from "../types/constants";

const stringGenerators: StringInputGenerator[] = [
    {
        category: 'strings',
        subcategory: 'empty',
        level: 'simple',
        values: (): ValueWithDescription[] => [
            { value: '', description: "''" },
            { value: ' ', description: "' '" },
            { value: '\t', description: "'\\t'" },
            { value: '\n', description: "'\\n'" },
            { value: '\r', description: "'\\r'" },
            { value: '\r\n', description: "'\\r\\n'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'basic',
        level: 'simple',
        values: (): ValueWithDescription[] => [
            { value: 'a', description: "'a'" },
            { value: 'A', description: "'A'" },
            { value: 'hello', description: "'hello'" },
            { value: 'world', description: "'world'" },
            { value: 'test', description: "'test'" },
            { value: 'foo', description: "'foo'" },
            { value: 'bar', description: "'bar'" },
            { value: 'abc123', description: "'abc123'" },
            { value: '123abc', description: "'123abc'" },
            { value: 'Hello World', description: "'Hello World'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'single-chars',
        level: 'simple',
        values: (): ValueWithDescription[] => [
            { value: 'a', description: "'a'" },
            { value: 'Z', description: "'Z'" },
            { value: '0', description: "'0'" },
            { value: '9', description: "'9'" },
            { value: '!', description: "'!'" },
            { value: '@', description: "'@'" },
            { value: '#', description: "'#'" },
            { value: '$', description: "'$'" },
            { value: '%', description: "'%'" },
            { value: '^', description: "'^'" },
            { value: '&', description: "'&'" },
            { value: '*', description: "'*'" },
            { value: '(', description: "'('" },
            { value: ')', description: "')'" },
            { value: '-', description: "'-'" },
            { value: '_', description: "'_'" },
            { value: '+', description: "'+'" },
            { value: '=', description: "'='" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'common-words',
        level: 'simple',
        values: (): ValueWithDescription[] => [
            { value: 'true', description: "'true'" },
            { value: 'false', description: "'false'" },
            { value: 'null', description: "'null'" },
            { value: 'undefined', description: "'undefined'" },
            { value: 'NaN', description: "'NaN'" },
            { value: 'Infinity', description: "'Infinity'" },
            { value: 'Object', description: "'Object'" },
            { value: 'Array', description: "'Array'" },
            { value: 'Function', description: "'Function'" }
        ]
    },

    {
        category: 'strings',
        subcategory: 'unicode',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '🚀', description: "'🚀'" },
            { value: '🎉', description: "'🎉'" },
            { value: '💯', description: "'💯'" },
            { value: '🔥', description: "'🔥'" },
            { value: '✨', description: "'✨'" },
            { value: '中文', description: "'中文'" },
            { value: '日本語', description: "'日本語'" },
            { value: '한국어', description: "'한국어'" },
            { value: 'العربية', description: "'العربية'" },
            { value: 'עברית', description: "'עברית'" },
            { value: 'русский', description: "'русский'" },
            { value: '🏳️‍🌈', description: "'🏳️‍🌈'" },
            { value: '🏳️‍⚧️', description: "'🏳️‍⚧️'" },
            { value: '👨‍👩‍👧‍👦', description: "'👨‍👩‍👧‍👦'" },
            { value: 'café', description: "'café'" },
            { value: 'naïve', description: "'naïve'" },
            { value: 'résumé', description: "'résumé'" },
            { value: 'piñata', description: "'piñata'" },
            { value: 'Ω', description: "'Ω'" },
            { value: 'π', description: "'π'" },
            { value: 'Σ', description: "'Σ'" },
            { value: 'Δ', description: "'Δ'" },
            { value: 'λ', description: "'λ'" },
            { value: '™', description: "'™'" },
            { value: '©', description: "'©'" },
            { value: '®', description: "'®'" },
            { value: '§', description: "'§'" },
            { value: '¶', description: "'¶'" },
            { value: '†', description: "'†'" },
            { value: '‡', description: "'‡'" },
            { value: '\u0000', description: "'\\u0000'" },
            { value: '\u0001', description: "'\\u0001'" },
            { value: '\u001f', description: "'\\u001f'" },
            { value: '\u007f', description: "'\\u007f'" },
            { value: '\u00a0', description: "'\\u00a0'" },
            { value: '\u2000', description: "'\\u2000'" },
            { value: '\u2001', description: "'\\u2001'" },
            { value: '\u2028', description: "'\\u2028'" },
            { value: '\u2029', description: "'\\u2029'" },
            { value: '\ufeff', description: "'\\ufeff'" },
            { value: '\uffff', description: "'\\uffff'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'whitespace',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: ' ', description: "' '" },
            { value: '  ', description: "'  '" },
            { value: '   ', description: "'   '" },
            { value: '\t', description: "'\\t'" },
            { value: '\t\t', description: "'\\t\\t'" },
            { value: '\n', description: "'\\n'" },
            { value: '\n\n', description: "'\\n\\n'" },
            { value: '\r', description: "'\\r'" },
            { value: '\r\r', description: "'\\r\\r'" },
            { value: '\r\n', description: "'\\r\\n'" },
            { value: ' \t\n\r ', description: "' \\t\\n\\r '" },
            { value: '\u00a0', description: "'\\u00a0'" },
            { value: '\u2000', description: "'\\u2000'" },
            { value: '\u2001', description: "'\\u2001'" },
            { value: '\u2002', description: "'\\u2002'" },
            { value: '\u2003', description: "'\\u2003'" },
            { value: '\u2004', description: "'\\u2004'" },
            { value: '\u2005', description: "'\\u2005'" },
            { value: '\u2006', description: "'\\u2006'" },
            { value: '\u2007', description: "'\\u2007'" },
            { value: '\u2008', description: "'\\u2008'" },
            { value: '\u2009', description: "'\\u2009'" },
            { value: '\u200a', description: "'\\u200a'" },
            { value: '\u200b', description: "'\\u200b'" },
            { value: '\u3000', description: "'\\u3000'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'special-chars',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '\\', description: "'\\\\'" },
            { value: '/', description: "'/'" },
            { value: '|', description: "'|'" },
            { value: '<', description: "'<'" },
            { value: '>', description: "'>'" },
            { value: '"', description: "'\"'" },
            { value: "'", description: "\"'\"" },
            { value: '`', description: "'`'" },
            { value: '~', description: "'~'" },
            { value: '!', description: "'!'" },
            { value: '@', description: "'@'" },
            { value: '#', description: "'#'" },
            { value: '$', description: "'$'" },
            { value: '%', description: "'%'" },
            { value: '^', description: "'^'" },
            { value: '&', description: "'&'" },
            { value: '*', description: "'*'" },
            { value: '(', description: "'('" },
            { value: ')', description: "')'" },
            { value: '-', description: "'-'" },
            { value: '_', description: "'_'" },
            { value: '+', description: "'+'" },
            { value: '=', description: "'='" },
            { value: '[', description: "'['" },
            { value: ']', description: "']'" },
            { value: '{', description: "'{'" },
            { value: '}', description: "'}'" },
            { value: ';', description: "';'" },
            { value: ':', description: "':'" },
            { value: ',', description: "','" },
            { value: '.', description: "'.'" },
            { value: '?', description: "'?'" },
            { value: '¿', description: "'¿'" },
            { value: '¡', description: "'¡'" },
            { value: '§', description: "'§'" },
            { value: '°', description: "'°'" },
            { value: '±', description: "'±'" },
            { value: '×', description: "'×'" },
            { value: '÷', description: "'÷'" },
            { value: '≠', description: "'≠'" },
            { value: '≤', description: "'≤'" },
            { value: '≥', description: "'≥'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'escape-sequences',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '\\n', description: "'\\\\n'" },
            { value: '\\t', description: "'\\\\t'" },
            { value: '\\r', description: "'\\\\r'" },
            { value: '\\\\', description: "'\\\\\\\\'" },
            { value: '\\"', description: "'\\\\\"'" },
            { value: "\\'", description: "\"\\\\'\"" },
            { value: '\\0', description: "'\\\\0'" },
            { value: '\\x00', description: "'\\\\x00'" },
            { value: '\\u0000', description: "'\\\\u0000'" },
            { value: '\b', description: "'\\b'" },
            { value: '\f', description: "'\\f'" },
            { value: '\v', description: "'\\v'" },
            { value: String.fromCharCode(0), description: 'String.fromCharCode(0)' },
            { value: String.fromCharCode(7), description: 'String.fromCharCode(7)' },
            { value: String.fromCharCode(27), description: 'String.fromCharCode(27)' }
        ]
    },
    {
        category: 'strings',
        subcategory: 'json',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '{}', description: "'{}'" },
            { value: '[]', description: "'[]'" },
            { value: 'null', description: "'null'" },
            { value: 'true', description: "'true'" },
            { value: 'false', description: "'false'" },
            { value: '"string"', description: "'\"string\"'" },
            { value: '123', description: "'123'" },
            { value: '-123', description: "'-123'" },
            { value: '{"key":"value"}', description: "'{\"key\":\"value\"}'" },
            { value: '[1,2,3]', description: "'[1,2,3]'" },
            { value: '{"nested":{"key":"value"}}', description: "'{\"nested\":{\"key\":\"value\"}}'" },
            { value: '"\\n\\t\\\\"', description: "'\"\\\\n\\\\t\\\\\\\\\"'" },
            { value: '{"key":null}', description: "'{\"key\":null}'" },
            { value: '{"key":true}', description: "'{\"key\":true}'" },
            { value: '{"key":false}', description: "'{\"key\":false}'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'html',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '<div>', description: "'<div>'" },
            { value: '</div>', description: "'</div>'" },
            { value: '<script>', description: "'<script>'" },
            { value: '</script>', description: "'</script>'" },
            { value: '<img>', description: "'<img>'" },
            { value: '<br/>', description: "'<br/>'" },
            { value: '&lt;', description: "'&lt;'" },
            { value: '&gt;', description: "'&gt;'" },
            { value: '&amp;', description: "'&amp;'" },
            { value: '&quot;', description: "'&quot;'" },
            { value: '&#39;', description: "'&#39;'" },
            { value: '&nbsp;', description: "'&nbsp;'" },
            { value: '<script>alert("xss")</script>', description: "'<script>alert(\"xss\")</script>'" },
            { value: '<!-- comment -->', description: "'<!-- comment -->'" },
            { value: '<img src="x" onerror="alert(1)">', description: "'<img src=\"x\" onerror=\"alert(1)\">'" },
            { value: '&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;', description: "'&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'paths',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '/', description: "'/'" },
            { value: '\\', description: "'\\\\'" },
            { value: '.', description: "'.'" },
            { value: '..', description: "'..'" },
            { value: '../', description: "'../'" },
            { value: './', description: "'./'" },
            { value: '../../', description: "'../../'" },
            { value: '~/', description: "'~/'" },
            { value: '/etc/passwd', description: "'/etc/passwd'" },
            { value: 'C:\\Windows\\System32', description: "'C:\\\\Windows\\\\System32'" },
            { value: '/var/log/', description: "'/var/log/'" },
            { value: 'file:///etc/passwd', description: "'file:///etc/passwd'" },
            { value: 'http://example.com', description: "'http://example.com'" },
            { value: 'https://example.com/path?query=value#fragment', description: "'https://example.com/path?query=value#fragment'" },
            { value: '\\\\server\\share', description: "'\\\\\\\\server\\\\share'" },
            { value: 'ftp://user:pass@host.com', description: "'ftp://user:pass@host.com'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'sql',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: "'", description: "\"'\"" },
            { value: '"', description: "'\"'" },
            { value: "'; DROP TABLE users; --", description: "\"'; DROP TABLE users; --\"" },
            { value: '" OR 1=1 --', description: "'\" OR 1=1 --'" },
            { value: "' UNION SELECT * FROM users --", description: "\"' UNION SELECT * FROM users --\"" },
            { value: "1' OR '1'='1", description: "\"1' OR '1'='1\"" },
            { value: "admin'--", description: "\"admin'--\"" },
            { value: "' OR 1=1#", description: "\"' OR 1=1#\"" },
            { value: "' WAITFOR DELAY '00:00:05' --", description: "\"' WAITFOR DELAY '00:00:05' --\"" },
            { value: '; SELECT * FROM information_schema.tables --', description: "'; SELECT * FROM information_schema.tables --'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'regex',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '.', description: "'.'" },
            { value: '*', description: "'*'" },
            { value: '+', description: "'+'" },
            { value: '?', description: "'?'" },
            { value: '^', description: "'^'" },
            { value: '$', description: "'$'" },
            { value: '|', description: "'|'" },
            { value: '(', description: "'('" },
            { value: ')', description: "')'" },
            { value: '[', description: "'['" },
            { value: ']', description: "']'" },
            { value: '{', description: "'{'" },
            { value: '}', description: "'}'" },
            { value: '\\', description: "'\\\\'" },
            { value: '\\d', description: "'\\\\d'" },
            { value: '\\w', description: "'\\\\w'" },
            { value: '\\s', description: "'\\\\s'" },
            { value: '.*', description: "'.*'" },
            { value: '.+', description: "'.+'" },
            { value: '^.*$', description: "'^.*$'" },
            { value: '(.*)', description: "'(.*)'" },
            { value: '[a-z]', description: "'[a-z]'" },
            { value: '[0-9]', description: "'[0-9]'" },
            { value: '\\b', description: "'\\\\b'" },
            { value: '\\B', description: "'\\\\B'" },
            { value: '(?:)', description: "'(?:)'" },
            { value: '(?=)', description: "'(?=)'" },
            { value: '(?!)', description: "'(?!)'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'encoding',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '%20', description: "'%20'" },
            { value: '%3C', description: "'%3C'" },
            { value: '%3E', description: "'%3E'" },
            { value: '%22', description: "'%22'" },
            { value: '%27', description: "'%27'" },
            { value: '&lt;', description: "'&lt;'" },
            { value: '&gt;', description: "'&gt;'" },
            { value: '&amp;', description: "'&amp;'" },
            { value: '&quot;', description: "'&quot;'" },
            { value: '\\x20', description: "'\\\\x20'" },
            { value: '\\x3c', description: "'\\\\x3c'" },
            { value: '\\x3e', description: "'\\\\x3e'" },
            { value: '\\u0020', description: "'\\\\u0020'" },
            { value: '\\u003c', description: "'\\\\u003c'" },
            { value: '\\u003e', description: "'\\\\u003e'" },
            { value: atob('aGVsbG8='), description: "atob('aGVsbG8=')" },
            { value: btoa('hello'), description: "btoa('hello')" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'formatting',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '%s', description: "'%s'" },
            { value: '%d', description: "'%d'" },
            { value: '%f', description: "'%f'" },
            { value: '{}', description: "'{}'" },
            { value: '{0}', description: "'{0}'" },
            { value: '{1}', description: "'{1}'" },
            { value: '${variable}', description: "'${variable}'" },
            { value: '{{double}}', description: "'{{double}}'" },
            { value: '%1$s', description: "'%1$s'" },
            { value: '%(name)s', description: "'%(name)s'" },
            { value: '\\n\\t\\r', description: "'\\\\n\\\\t\\\\r'" },
            { value: 'line1\nline2', description: "'line1\\nline2'" },
            { value: 'tab\there', description: "'tab\\there'" },
            { value: 'quote"here', description: "'quote\"here'" },
            { value: "quote'here", description: "\"quote'here\"" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'numbers-as-strings',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: '0', description: "'0'" },
            { value: '1', description: "'1'" },
            { value: '-1', description: "'-1'" },
            { value: '123', description: "'123'" },
            { value: '-123', description: "'-123'" },
            { value: '0.1', description: "'0.1'" },
            { value: '-0.1', description: "'-0.1'" },
            { value: '3.14', description: "'3.14'" },
            { value: '-3.14', description: "'-3.14'" },
            { value: 'Infinity', description: "'Infinity'" },
            { value: '-Infinity', description: "'-Infinity'" },
            { value: 'NaN', description: "'NaN'" },
            { value: '1e10', description: "'1e10'" },
            { value: '-1e10', description: "'-1e10'" },
            { value: '1.23e-4', description: "'1.23e-4'" },
            { value: '0x1F', description: "'0x1F'" },
            { value: '0o777', description: "'0o777'" },
            { value: '0b1010', description: "'0b1010'" },
            { value: '1,000', description: "'1,000'" },
            { value: '1.000,50', description: "'1.000,50'" },
            { value: '$123.45', description: "'$123.45'" },
            { value: '50%', description: "'50%'" },
            { value: '1/2', description: "'1/2'" },
            { value: '2²', description: "'2²'" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'booleans-as-strings',
        level: 'detailed',
        values: (): ValueWithDescription[] => [
            { value: 'true', description: "'true'" },
            { value: 'false', description: "'false'" },
            { value: 'True', description: "'True'" },
            { value: 'False', description: "'False'" },
            { value: 'TRUE', description: "'TRUE'" },
            { value: 'FALSE', description: "'FALSE'" },
            { value: 'yes', description: "'yes'" },
            { value: 'no', description: "'no'" },
            { value: 'Yes', description: "'Yes'" },
            { value: 'No', description: "'No'" },
            { value: 'YES', description: "'YES'" },
            { value: 'NO', description: "'NO'" },
            { value: 'on', description: "'on'" },
            { value: 'off', description: "'off'" },
            { value: 'On', description: "'On'" },
            { value: 'Off', description: "'Off'" },
            { value: 'ON', description: "'ON'" },
            { value: 'OFF', description: "'OFF'" },
            { value: '1', description: "'1'" },
            { value: '0', description: "'0'" },
            { value: 'y', description: "'y'" },
            { value: 'n', description: "'n'" },
            { value: 'Y', description: "'Y'" },
            { value: 'N', description: "'N'" }
        ]
    },

    {
        category: 'strings',
        subcategory: 'large',
        level: 'large',
        values: (): ValueWithDescription[] => [
            { value: ' '.repeat(LargeSize), description: "' '.repeat(LargeSize)" },
            { value: 'a'.repeat(LargeSize), description: "'a'.repeat(LargeSize)" },
            { value: 'x'.repeat(LargeSize), description: "'x'.repeat(LargeSize)" },
            { value: '0'.repeat(LargeSize), description: "'0'.repeat(LargeSize)" },
            { value: 'Hello World! '.repeat(LargeSize / 13), description: "'Hello World! '.repeat(LargeSize / 13)" },
            { value: '🚀'.repeat(LargeSize / 4), description: "'🚀'.repeat(LargeSize / 4)" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'repeated',
        level: 'large',
        values: (): ValueWithDescription[] => [
            { value: 'a'.repeat(LargeSize), description: "'a'.repeat(LargeSize)" },
            { value: 'ab'.repeat(LargeSize / 2), description: "'ab'.repeat(LargeSize / 2)" },
            { value: 'abc'.repeat(LargeSize / 3), description: "'abc'.repeat(LargeSize / 3)" },
            { value: '123'.repeat(LargeSize / 3), description: "'123'.repeat(LargeSize / 3)" },
            { value: '<tag>'.repeat(LargeSize / 5), description: "'<tag>'.repeat(LargeSize / 5)" },
            { value: '..\\'.repeat(LargeSize / 3), description: "'..\\\\'.repeat(LargeSize / 3)" },
            { value: '/**/'.repeat(LargeSize / 4), description: "'/**/'.repeat(LargeSize / 4)" },
            { value: 'null,'.repeat(LargeSize / 4), description: "'null,'.repeat(LargeSize / 4)" }
        ]
    },
    {
        category: 'strings',
        subcategory: 'memory-intensive',
        level: 'large',
        values: (): ValueWithDescription[] => [
            { value: JSON.stringify(Array(LargeSize).fill('data')), description: "JSON.stringify(Array(LargeSize).fill('data'))" },
            { value: Array(LargeSize).fill('item').join(','), description: "Array(LargeSize).fill('item').join(',')" },
            { value: 'A'.repeat(Math.floor(LargeSize / 2)) + 'B'.repeat(Math.floor(LargeSize / 2)), description: "'A'.repeat(Math.floor(LargeSize / 2)) + 'B'.repeat(Math.floor(LargeSize / 2))" },
            { value: '🎉'.repeat(LargeSize), description: "'🎉'.repeat(LargeSize)" },
            { value: '<div>'.repeat(Math.floor(LargeSize / 2)) + 'content' + '</div>'.repeat(Math.floor(LargeSize / 2)), description: "'<div>'.repeat(Math.floor(LargeSize / 2)) + 'content' + '</div>'.repeat(Math.floor(LargeSize / 2))" }
        ]
    }
];

export default stringGenerators;
